{
  "AustinXL Wi-Fi Upgrade": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 37,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 38,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 40,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 41,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 42,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 43,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 45,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 46,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 6,
      "name": "PBM",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 36) {\r\n  return null;\r\n}\r\nconst status = {\r\n // p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  moduleIsOn: parts[18] === 1,\r\n  err1: parts[19] === 1,\r\n  err2: parts[20] === 1,\r\n  err3: parts[21] === 1,\r\n  highTempErr: parts[22] === 1,\r\n  fanErr: parts[23] === 1,\r\n  hotErr: parts[24] === 1,\r\n  motorErr: parts[25] === 1,\r\n  noPellets: parts[26] === 1,\r\n  fanState: parts[27] === 1,\r\n  hotState: parts[28] === 1,\r\n  motorState: parts[29] === 1,\r\n  lightState: parts[30] === 1,\r\n  isFahrenheit: parts[31] === 1,\r\n  recipeStep: parts[32],\r\n  recipeTime: parts[33] * 3600 + parts[34] * 60 + parts[35],\r\n};\r\nswitch (parts[17]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 14);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 14);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 21) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n  //  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  grillSetTemp: convertTemperature(parts, 14),\r\n  grillTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[20] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-11-04T07:23:53.000000Z"
    },
    "control_board_id": 6,
    "created_at": "2023-06-13T14:57:42.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 93,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/ghost%20grill.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Onyx/10986_PB1000NX_owners_manual.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "AustinXL Wi-Fi Upgrade",
    "name_text_color": "#A1A1A1",
    "part_number": "AustinXL Wi-Fi Upgrade",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2023-06-16T10:49:04.000000Z"
  },
  "LG0800BL": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:28:54.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 95,
          "name": "Set Temperature to Celcius",
          "slug": "set-celsius",
          "updated_at": "2022-12-09T12:11:06.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:31:52.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 96,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2022-12-06T15:31:52.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:33:02.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 97,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2022-12-06T15:33:02.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:33:48.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 98,
          "name": "Set Probe 1 Temperature",
          "slug": "set-prove-1-temperature",
          "updated_at": "2022-12-06T15:33:48.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:34:51.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 99,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2022-12-06T15:34:51.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:35:24.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 100,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2022-12-06T15:35:24.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:36:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 101,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2022-12-06T15:36:19.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:37:20.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 103,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": "2022-12-06T15:37:20.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:38:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 104,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": "2022-12-06T15:38:19.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 8,
      "name": "LBL",
      "platform_id": 1,
      "site_id": 2,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 41) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 14),\r\n  moduleIsOn: parts[21] === 1,\r\n  err1: parts[22] === 1,\r\n  err2: parts[23] === 1,\r\n  err3: parts[24] === 1,\r\n  highTempErr: parts[25] === 1,\r\n  fanErr: parts[26] === 1,\r\n  hotErr: parts[27] === 1,\r\n  motorErr: parts[28] === 1,\r\n  noPellets: parts[29] === 1,\r\n  erL: parts[30] === 1,\r\n  fanState: parts[31] === 1,\r\n  hotState: parts[32] === 1,\r\n  motorState: parts[33] === 1,\r\n  lightState: parts[34] === 1,\r\n  primeState: parts[35] === 1,\r\n  isFahrenheit: parts[36] === 1,\r\n  recipeStep: parts[37],\r\n  recipeTime: parts[38] * 3600 + parts[39] * 60 + parts[40],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 24) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 17),\r\n  grillTemp: convertTemperature(parts, 20),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[23] === 1,\r\n};",
      "updated_at": "2023-01-30T14:06:01.000000Z"
    },
    "control_board_id": 8,
    "created_at": "2022-12-06T22:49:00.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 79,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/LG0800BL.png",
    "lights": 0,
    "manual_url": "https://dansons-users-manuals.s3.us-west-2.amazonaws.com/louisiana-grills/Black%20Label%20Series/LG0800BL_LG1000BL_LG1200BL_OwnersManual_110V_EN_FR_ES.PDF",
    "max_temp": "600",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "LG0800BL",
    "name_text_color": "#A1A1A1",
    "part_number": "LG0800BL",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 2,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500/505/510/515/520/525/530/535/540/545/550/555/560/565/570/575/580/585/590/595/600",
    "updated_at": "2022-12-08T14:30:40.000000Z"
  },
  "LG1000BL": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:28:54.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 95,
          "name": "Set Temperature to Celcius",
          "slug": "set-celsius",
          "updated_at": "2022-12-09T12:11:06.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:31:52.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 96,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2022-12-06T15:31:52.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:33:02.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 97,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2022-12-06T15:33:02.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:33:48.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 98,
          "name": "Set Probe 1 Temperature",
          "slug": "set-prove-1-temperature",
          "updated_at": "2022-12-06T15:33:48.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:34:51.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 99,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2022-12-06T15:34:51.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:35:24.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 100,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2022-12-06T15:35:24.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:36:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 101,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2022-12-06T15:36:19.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:37:20.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 103,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": "2022-12-06T15:37:20.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:38:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 104,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": "2022-12-06T15:38:19.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 8,
      "name": "LBL",
      "platform_id": 1,
      "site_id": 2,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 41) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 14),\r\n  moduleIsOn: parts[21] === 1,\r\n  err1: parts[22] === 1,\r\n  err2: parts[23] === 1,\r\n  err3: parts[24] === 1,\r\n  highTempErr: parts[25] === 1,\r\n  fanErr: parts[26] === 1,\r\n  hotErr: parts[27] === 1,\r\n  motorErr: parts[28] === 1,\r\n  noPellets: parts[29] === 1,\r\n  erL: parts[30] === 1,\r\n  fanState: parts[31] === 1,\r\n  hotState: parts[32] === 1,\r\n  motorState: parts[33] === 1,\r\n  lightState: parts[34] === 1,\r\n  primeState: parts[35] === 1,\r\n  isFahrenheit: parts[36] === 1,\r\n  recipeStep: parts[37],\r\n  recipeTime: parts[38] * 3600 + parts[39] * 60 + parts[40],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 24) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 17),\r\n  grillTemp: convertTemperature(parts, 20),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[23] === 1,\r\n};",
      "updated_at": "2023-01-30T14:06:01.000000Z"
    },
    "control_board_id": 8,
    "created_at": "2022-12-06T15:52:22.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 80,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/LG1000BL.png",
    "lights": 0,
    "manual_url": "https://dansons-users-manuals.s3.us-west-2.amazonaws.com/louisiana-grills/Black%20Label%20Series/LG0800BL_LG1000BL_LG1200BL_OwnersManual_110V_EN_FR_ES.PDF",
    "max_temp": "600",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "LG1000BL",
    "name_text_color": "#A1A1A1",
    "part_number": "LG1000BL",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 2,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500/505/510/515/520/525/530/535/540/545/550/555/560/565/570/575/580/585/590/595/600",
    "updated_at": "2022-12-08T14:31:25.000000Z"
  },
  "LG1200BL": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:28:54.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 95,
          "name": "Set Temperature to Celcius",
          "slug": "set-celsius",
          "updated_at": "2022-12-09T12:11:06.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:31:52.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 96,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2022-12-06T15:31:52.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:33:02.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 97,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2022-12-06T15:33:02.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:33:48.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 98,
          "name": "Set Probe 1 Temperature",
          "slug": "set-prove-1-temperature",
          "updated_at": "2022-12-06T15:33:48.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:34:51.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 99,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2022-12-06T15:34:51.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:35:24.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 100,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2022-12-06T15:35:24.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:36:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 101,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2022-12-06T15:36:19.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:37:20.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 103,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": "2022-12-06T15:37:20.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:38:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 104,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": "2022-12-06T15:38:19.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 8,
      "name": "LBL",
      "platform_id": 1,
      "site_id": 2,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 41) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 14),\r\n  moduleIsOn: parts[21] === 1,\r\n  err1: parts[22] === 1,\r\n  err2: parts[23] === 1,\r\n  err3: parts[24] === 1,\r\n  highTempErr: parts[25] === 1,\r\n  fanErr: parts[26] === 1,\r\n  hotErr: parts[27] === 1,\r\n  motorErr: parts[28] === 1,\r\n  noPellets: parts[29] === 1,\r\n  erL: parts[30] === 1,\r\n  fanState: parts[31] === 1,\r\n  hotState: parts[32] === 1,\r\n  motorState: parts[33] === 1,\r\n  lightState: parts[34] === 1,\r\n  primeState: parts[35] === 1,\r\n  isFahrenheit: parts[36] === 1,\r\n  recipeStep: parts[37],\r\n  recipeTime: parts[38] * 3600 + parts[39] * 60 + parts[40],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 24) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 17),\r\n  grillTemp: convertTemperature(parts, 20),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[23] === 1,\r\n};",
      "updated_at": "2023-01-30T14:06:01.000000Z"
    },
    "control_board_id": 8,
    "created_at": "2022-12-06T15:52:22.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 81,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/LG1200BL.png",
    "lights": 0,
    "manual_url": "https://dansons-users-manuals.s3.us-west-2.amazonaws.com/louisiana-grills/Black%20Label%20Series/LG0800BL_LG1000BL_LG1200BL_OwnersManual_110V_EN_FR_ES.PDF",
    "max_temp": "600",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "LG1200BL",
    "name_text_color": "#A1A1A1",
    "part_number": "LG1200BL",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 2,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500/505/510/515/520/525/530/535/540/545/550/555/560/565/570/575/580/585/590/595/600",
    "updated_at": "2022-12-08T14:32:01.000000Z"
  },
  "LG1200FL": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:28:54.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 105,
          "name": "Set Temperature to Celcius",
          "slug": "set-celsius",
          "updated_at": "2022-12-09T12:11:26.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:31:52.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 106,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2022-12-06T15:31:52.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:33:02.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 107,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2023-01-30T14:09:06.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:34:51.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 109,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2022-12-06T15:34:51.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:35:24.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 110,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2022-12-06T15:35:24.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:36:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 111,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2022-12-06T15:36:19.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:37:20.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 113,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": "2022-12-06T15:37:20.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:38:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 114,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": "2022-12-06T15:38:19.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 9,
      "name": "LFS",
      "platform_id": 1,
      "site_id": 2,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 41) {\r\n  return null;\r\n}\r\nconst status = {\r\n/*  p1Target: convertTemperature(parts, 2), */\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 14),\r\n  moduleIsOn: parts[21] === 1,\r\n  err1: parts[22] === 1,\r\n  err2: parts[23] === 1,\r\n  err3: parts[24] === 1,\r\n  highTempErr: parts[25] === 1,\r\n  fanErr: parts[26] === 1,\r\n  hotErr: parts[27] === 1,\r\n  motorErr: parts[28] === 1,\r\n  noPellets: parts[29] === 1,\r\n  erL: parts[30] === 1,\r\n  fanState: parts[31] === 1,\r\n  hotState: parts[32] === 1,\r\n  motorState: parts[33] === 1,\r\n  lightState: parts[34] === 1,\r\n  primeState: parts[35] === 1,\r\n  isFahrenheit: parts[36] === 1,\r\n  recipeStep: parts[37],\r\n  recipeTime: parts[38] * 3600 + parts[39] * 60 + parts[40],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 24) {\r\n  return null;\r\n}\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2), */\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 17),\r\n  grillTemp: convertTemperature(parts, 20),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[23] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2023-02-08T09:30:34.000000Z"
    },
    "control_board_id": 9,
    "created_at": "2022-12-06T15:52:22.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 85,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/LG1200FL.png",
    "lights": 1,
    "manual_url": "https://dansons-users-manuals.s3.us-west-2.amazonaws.com/louisiana-grills/Founders%20Series/LG800FL_LG1200FL_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "600",
    "meat_probes": 4,
    "min_temp": "180",
    "name": "LG1200FL",
    "name_text_color": "#A1A1A1",
    "part_number": "LG1200FL",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 2,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500/505/510/515/520/525/530/535/540/545/550/555/560/565/570/575/580/585/590/595/600",
    "updated_at": "2022-12-08T14:34:26.000000Z"
  },
  "LG1200FP": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:28:54.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 105,
          "name": "Set Temperature to Celcius",
          "slug": "set-celsius",
          "updated_at": "2022-12-09T12:11:26.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:31:52.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 106,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2022-12-06T15:31:52.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:33:02.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 107,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2023-01-30T14:09:06.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:34:51.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 109,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2022-12-06T15:34:51.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:35:24.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 110,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2022-12-06T15:35:24.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:36:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 111,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2022-12-06T15:36:19.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:37:20.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 113,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": "2022-12-06T15:37:20.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:38:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 114,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": "2022-12-06T15:38:19.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 9,
      "name": "LFS",
      "platform_id": 1,
      "site_id": 2,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 41) {\r\n  return null;\r\n}\r\nconst status = {\r\n/*  p1Target: convertTemperature(parts, 2), */\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 14),\r\n  moduleIsOn: parts[21] === 1,\r\n  err1: parts[22] === 1,\r\n  err2: parts[23] === 1,\r\n  err3: parts[24] === 1,\r\n  highTempErr: parts[25] === 1,\r\n  fanErr: parts[26] === 1,\r\n  hotErr: parts[27] === 1,\r\n  motorErr: parts[28] === 1,\r\n  noPellets: parts[29] === 1,\r\n  erL: parts[30] === 1,\r\n  fanState: parts[31] === 1,\r\n  hotState: parts[32] === 1,\r\n  motorState: parts[33] === 1,\r\n  lightState: parts[34] === 1,\r\n  primeState: parts[35] === 1,\r\n  isFahrenheit: parts[36] === 1,\r\n  recipeStep: parts[37],\r\n  recipeTime: parts[38] * 3600 + parts[39] * 60 + parts[40],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 24) {\r\n  return null;\r\n}\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2), */\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 17),\r\n  grillTemp: convertTemperature(parts, 20),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[23] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2023-02-08T09:30:34.000000Z"
    },
    "control_board_id": 9,
    "created_at": "2022-12-06T15:52:22.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 87,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/LG1200FP.png",
    "lights": 0,
    "manual_url": "https://dansons-users-manuals.s3.us-west-2.amazonaws.com/louisiana-grills/Founders%20Series/LG800FP_LG1200FP_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "600",
    "meat_probes": 4,
    "min_temp": "180",
    "name": "LG1200FP",
    "name_text_color": "#A1A1A1",
    "part_number": "LG1200FP",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 2,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500/505/510/515/520/525/530/535/540/545/550/555/560/565/570/575/580/585/590/595/600",
    "updated_at": "2022-12-08T14:36:10.000000Z"
  },
  "LG300BL": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:28:54.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 95,
          "name": "Set Temperature to Celcius",
          "slug": "set-celsius",
          "updated_at": "2022-12-09T12:11:06.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:31:52.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 96,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2022-12-06T15:31:52.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:33:02.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 97,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2022-12-06T15:33:02.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:33:48.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 98,
          "name": "Set Probe 1 Temperature",
          "slug": "set-prove-1-temperature",
          "updated_at": "2022-12-06T15:33:48.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:34:51.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 99,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2022-12-06T15:34:51.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:35:24.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 100,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2022-12-06T15:35:24.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:36:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 101,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2022-12-06T15:36:19.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:37:20.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 103,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": "2022-12-06T15:37:20.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:38:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 104,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": "2022-12-06T15:38:19.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 8,
      "name": "LBL",
      "platform_id": 1,
      "site_id": 2,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 41) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 14),\r\n  moduleIsOn: parts[21] === 1,\r\n  err1: parts[22] === 1,\r\n  err2: parts[23] === 1,\r\n  err3: parts[24] === 1,\r\n  highTempErr: parts[25] === 1,\r\n  fanErr: parts[26] === 1,\r\n  hotErr: parts[27] === 1,\r\n  motorErr: parts[28] === 1,\r\n  noPellets: parts[29] === 1,\r\n  erL: parts[30] === 1,\r\n  fanState: parts[31] === 1,\r\n  hotState: parts[32] === 1,\r\n  motorState: parts[33] === 1,\r\n  lightState: parts[34] === 1,\r\n  primeState: parts[35] === 1,\r\n  isFahrenheit: parts[36] === 1,\r\n  recipeStep: parts[37],\r\n  recipeTime: parts[38] * 3600 + parts[39] * 60 + parts[40],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 24) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 17),\r\n  grillTemp: convertTemperature(parts, 20),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[23] === 1,\r\n};",
      "updated_at": "2023-01-30T14:06:01.000000Z"
    },
    "control_board_id": 8,
    "created_at": "2022-12-06T15:52:22.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 82,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/LG300BL.png",
    "lights": 0,
    "manual_url": "https://dansons-users-manuals.s3.us-west-2.amazonaws.com/louisiana-grills/Black%20Label%20Series/10838_10850_LG300BL_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "LG300BL",
    "name_text_color": "#A1A1A1",
    "part_number": "LG300BL",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 2,
    "sku": null,
    "temp_increment": "150/155/160/165/170/175/180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2022-12-08T14:32:40.000000Z"
  },
  "LG800FL": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:28:54.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 105,
          "name": "Set Temperature to Celcius",
          "slug": "set-celsius",
          "updated_at": "2022-12-09T12:11:26.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:31:52.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 106,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2022-12-06T15:31:52.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:33:02.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 107,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2023-01-30T14:09:06.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:34:51.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 109,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2022-12-06T15:34:51.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:35:24.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 110,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2022-12-06T15:35:24.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:36:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 111,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2022-12-06T15:36:19.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:37:20.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 113,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": "2022-12-06T15:37:20.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:38:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 114,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": "2022-12-06T15:38:19.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 9,
      "name": "LFS",
      "platform_id": 1,
      "site_id": 2,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 41) {\r\n  return null;\r\n}\r\nconst status = {\r\n/*  p1Target: convertTemperature(parts, 2), */\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 14),\r\n  moduleIsOn: parts[21] === 1,\r\n  err1: parts[22] === 1,\r\n  err2: parts[23] === 1,\r\n  err3: parts[24] === 1,\r\n  highTempErr: parts[25] === 1,\r\n  fanErr: parts[26] === 1,\r\n  hotErr: parts[27] === 1,\r\n  motorErr: parts[28] === 1,\r\n  noPellets: parts[29] === 1,\r\n  erL: parts[30] === 1,\r\n  fanState: parts[31] === 1,\r\n  hotState: parts[32] === 1,\r\n  motorState: parts[33] === 1,\r\n  lightState: parts[34] === 1,\r\n  primeState: parts[35] === 1,\r\n  isFahrenheit: parts[36] === 1,\r\n  recipeStep: parts[37],\r\n  recipeTime: parts[38] * 3600 + parts[39] * 60 + parts[40],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 24) {\r\n  return null;\r\n}\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2), */\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 17),\r\n  grillTemp: convertTemperature(parts, 20),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[23] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2023-02-08T09:30:34.000000Z"
    },
    "control_board_id": 9,
    "created_at": "2022-12-06T15:52:22.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 84,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/LG800FL.png",
    "lights": 1,
    "manual_url": "https://dansons-users-manuals.s3.us-west-2.amazonaws.com/louisiana-grills/Founders%20Series/LG800FL_LG1200FL_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "600",
    "meat_probes": 4,
    "min_temp": "180",
    "name": "LG800FL",
    "name_text_color": "#A1A1A1",
    "part_number": "LG800FL",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 2,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500/505/510/515/520/525/530/535/540/545/550/555/560/565/570/575/580/585/590/595/600",
    "updated_at": "2022-12-08T14:34:02.000000Z"
  },
  "LG800FP": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:28:54.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 105,
          "name": "Set Temperature to Celcius",
          "slug": "set-celsius",
          "updated_at": "2022-12-09T12:11:26.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:31:52.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 106,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2022-12-06T15:31:52.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:33:02.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 107,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2023-01-30T14:09:06.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:34:51.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 109,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2022-12-06T15:34:51.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:35:24.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 110,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2022-12-06T15:35:24.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:36:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 111,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2022-12-06T15:36:19.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:37:20.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 113,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": "2022-12-06T15:37:20.000000Z"
        },
        {
          "control_board_id": 9,
          "created_at": "2022-12-06T15:38:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 114,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": "2022-12-06T15:38:19.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 9,
      "name": "LFS",
      "platform_id": 1,
      "site_id": 2,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 41) {\r\n  return null;\r\n}\r\nconst status = {\r\n/*  p1Target: convertTemperature(parts, 2), */\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 14),\r\n  moduleIsOn: parts[21] === 1,\r\n  err1: parts[22] === 1,\r\n  err2: parts[23] === 1,\r\n  err3: parts[24] === 1,\r\n  highTempErr: parts[25] === 1,\r\n  fanErr: parts[26] === 1,\r\n  hotErr: parts[27] === 1,\r\n  motorErr: parts[28] === 1,\r\n  noPellets: parts[29] === 1,\r\n  erL: parts[30] === 1,\r\n  fanState: parts[31] === 1,\r\n  hotState: parts[32] === 1,\r\n  motorState: parts[33] === 1,\r\n  lightState: parts[34] === 1,\r\n  primeState: parts[35] === 1,\r\n  isFahrenheit: parts[36] === 1,\r\n  recipeStep: parts[37],\r\n  recipeTime: parts[38] * 3600 + parts[39] * 60 + parts[40],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 24) {\r\n  return null;\r\n}\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2), */\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 17),\r\n  grillTemp: convertTemperature(parts, 20),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[23] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2023-02-08T09:30:34.000000Z"
    },
    "control_board_id": 9,
    "created_at": "2022-12-06T15:52:22.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 86,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/LG800FP.png",
    "lights": 0,
    "manual_url": "https://dansons-users-manuals.s3.us-west-2.amazonaws.com/louisiana-grills/Founders%20Series/LG800FP_LG1200FP_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "600",
    "meat_probes": 4,
    "min_temp": "180",
    "name": "LG800FP",
    "name_text_color": "#A1A1A1",
    "part_number": "LG800FP",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 2,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500/505/510/515/520/525/530/535/540/545/550/555/560/565/570/575/580/585/590/595/600",
    "updated_at": "2022-12-08T14:35:03.000000Z"
  },
  "LGV4BL": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:28:54.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 95,
          "name": "Set Temperature to Celcius",
          "slug": "set-celsius",
          "updated_at": "2022-12-09T12:11:06.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:31:52.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 96,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2022-12-06T15:31:52.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:33:02.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 97,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2022-12-06T15:33:02.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:33:48.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 98,
          "name": "Set Probe 1 Temperature",
          "slug": "set-prove-1-temperature",
          "updated_at": "2022-12-06T15:33:48.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:34:51.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 99,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2022-12-06T15:34:51.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:35:24.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 100,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2022-12-06T15:35:24.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:36:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 101,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2022-12-06T15:36:19.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:37:20.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 103,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": "2022-12-06T15:37:20.000000Z"
        },
        {
          "control_board_id": 8,
          "created_at": "2022-12-06T15:38:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 104,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": "2022-12-06T15:38:19.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 8,
      "name": "LBL",
      "platform_id": 1,
      "site_id": 2,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 41) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 14),\r\n  moduleIsOn: parts[21] === 1,\r\n  err1: parts[22] === 1,\r\n  err2: parts[23] === 1,\r\n  err3: parts[24] === 1,\r\n  highTempErr: parts[25] === 1,\r\n  fanErr: parts[26] === 1,\r\n  hotErr: parts[27] === 1,\r\n  motorErr: parts[28] === 1,\r\n  noPellets: parts[29] === 1,\r\n  erL: parts[30] === 1,\r\n  fanState: parts[31] === 1,\r\n  hotState: parts[32] === 1,\r\n  motorState: parts[33] === 1,\r\n  lightState: parts[34] === 1,\r\n  primeState: parts[35] === 1,\r\n  isFahrenheit: parts[36] === 1,\r\n  recipeStep: parts[37],\r\n  recipeTime: parts[38] * 3600 + parts[39] * 60 + parts[40],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 24) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 17),\r\n  grillTemp: convertTemperature(parts, 20),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[23] === 1,\r\n};",
      "updated_at": "2023-01-30T14:06:01.000000Z"
    },
    "control_board_id": 8,
    "created_at": "2022-12-06T15:52:22.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 83,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/LGV4BL.png",
    "lights": 0,
    "manual_url": "https://dansons-users-manuals.s3.us-west-2.amazonaws.com/louisiana-grills/Black%20Label%20Series/10751_10800_LGV4BL_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "420",
    "meat_probes": 2,
    "min_temp": "130",
    "name": "LGV4BL",
    "name_text_color": "#A1A1A1",
    "part_number": "LGV4BL",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 2,
    "sku": null,
    "temp_increment": "130/135/140/145/150/155/160/165/170/175/180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420",
    "updated_at": "2022-12-08T14:33:31.000000Z"
  },
  "Lexington Wi-Fi Upgrade": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 37,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 38,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 40,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 41,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 42,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 43,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 45,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 46,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 6,
      "name": "PBM",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 36) {\r\n  return null;\r\n}\r\nconst status = {\r\n // p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  moduleIsOn: parts[18] === 1,\r\n  err1: parts[19] === 1,\r\n  err2: parts[20] === 1,\r\n  err3: parts[21] === 1,\r\n  highTempErr: parts[22] === 1,\r\n  fanErr: parts[23] === 1,\r\n  hotErr: parts[24] === 1,\r\n  motorErr: parts[25] === 1,\r\n  noPellets: parts[26] === 1,\r\n  fanState: parts[27] === 1,\r\n  hotState: parts[28] === 1,\r\n  motorState: parts[29] === 1,\r\n  lightState: parts[30] === 1,\r\n  isFahrenheit: parts[31] === 1,\r\n  recipeStep: parts[32],\r\n  recipeTime: parts[33] * 3600 + parts[34] * 60 + parts[35],\r\n};\r\nswitch (parts[17]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 14);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 14);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 21) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n  //  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  grillSetTemp: convertTemperature(parts, 14),\r\n  grillTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[20] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-11-04T07:23:53.000000Z"
    },
    "control_board_id": 6,
    "created_at": "2023-06-13T15:09:01.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 95,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/ghost%20grill.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Onyx/10985_PB500NX_owners_manual.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "Lexington Wi-Fi Upgrade",
    "name_text_color": "#A1A1A1",
    "part_number": "Lexington Wi-Fi Upgrade",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2023-06-16T10:49:45.000000Z"
  },
  "PB0500SP": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 56,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/500sp-109.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Sportsman/PBSP_Owners_Manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB0500SP",
    "name_text_color": "#DC582A",
    "part_number": "PB0500SP",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T15:01:22.000000Z"
  },
  "PB0820SP/SPW": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 51,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB820sp.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Sportsman/PBSP_Owners_Manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB0820SP/SPW",
    "name_text_color": "#DC582A",
    "part_number": "PB0820SP/SPW",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-09T13:28:57.000000Z"
  },
  "PB1000NC1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 47,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000NC1.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Nascar/10402_PBPEL100010402_manualUSA_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1000NC1",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000NC1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:57:21.000000Z"
  },
  "PB1000PL": {
    "category": "Wood Pellet",
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 13,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 14,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 15,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 16,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 18,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 19,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 20,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 21,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 23,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 24,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 3,
      "name": "PBG",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:11:46.000000Z"
    },
    "control_board_id": 3,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 1,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/LAREDO-1000-2020-3-18-103.png",
    "lights": 1,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Platinum-Series/10712_10880_PB1000PL_manual_110V_EN_FR_ES.pdf",
    "max_temp": "High",
    "meat_probes": 2,
    "min_temp": "Smoke",
    "name": "PB1000PL",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1000PL",
    "screen_orientation": "Horizontal",
    "shopify_product_id": "7019607294140",
    "site_id": 1,
    "sku": "10712",
    "temp_increment": "180/200/225/250/275/300/325/350/375/400/425/450/500",
    "updated_at": "2022-10-31T13:49:49.000000Z"
  },
  "PB1000R1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 35,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000R1.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/R-Series/72750_PB1000R1_manualUSA_EN.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB1000R1",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000R1",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-07T16:27:33.000000Z"
  },
  "PB1000R2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 33,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000R2-2019-11-29-abby-112.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/R-Series/10540_10682_PB1000R2_manual_110V_EN_FR%20%281%29.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB1000R2",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000R2",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:28:11.000000Z"
  },
  "PB1000S1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 30,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000S1.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72710_PB1000S1_manual_110V_EN.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB1000S1",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000S1",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-03T14:41:59.000000Z"
  },
  "PB1000SC1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 32,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000SC-2019-7-4-Abby-34.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72751_PB1000SC1_manualUSA_EN.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB1000SC1",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000SC1",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:27:19.000000Z"
  },
  "PB1000SC2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 48,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/pb1000sc2.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72800_PB1000SC2_manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1000SC2",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000SC2",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:57:44.000000Z"
  },
  "PB1000SP": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 50,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000sp.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Sportsman/PBSP_Owners_Manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1000SP",
    "name_text_color": "#DC582A",
    "part_number": "PB1000SP",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-09T13:29:21.000000Z"
  },
  "PB1000T1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 31,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000T1-2019-7-4-abby-35.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72755_PB1000T1_manual_USA_EN.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB1000T1",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000T1",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:26:49.000000Z"
  },
  "PB1000T2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 34,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000T2-2018-11-28-abby-36.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Traditional/72790_PB1000T2_manualUSA_EN.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB1000T2",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000T2",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:28:40.000000Z"
  },
  "PB1000T3": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 43,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000T3-117.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Traditional/10522_PB1000T3_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1000T3",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000T3",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:48:01.000000Z"
  },
  "PB1000T4": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 49,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000t4-115.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Traditional/10742_PB1000T4_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1000T4",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000T4",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:58:08.000000Z"
  },
  "PB1000XL/PB1000SC3": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 40,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1000SC3-Front-101619.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/10550_PB1000XL_manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1000XL/PB1000SC3",
    "name_text_color": "#2B77BC",
    "part_number": "PB1000XL/PB1000SC3",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:46:41.000000Z"
  },
  "PB1000XLW1 (Austin XL)": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 64,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/austin-xl.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Copper/75953_PB1000XLW1_manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1000XLW1 (Austin XL)",
    "name_text_color": "#AD6B4E",
    "part_number": "PB1000XLW1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-22T14:49:09.000000Z"
  },
  "PB1100PS1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 38,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/1100ps.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/72760_PB1100PS1_manualUSA_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1100PS1",
    "name_text_color": "#2B77BC",
    "part_number": "PB1100PS1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:45:54.000000Z"
  },
  "PB1100PSC1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 59,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1100PSC.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/10002_PB1100PSC1_manualUSA_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1100PSC1",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1100PSC1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T15:02:42.000000Z"
  },
  "PB1100PSC2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 25,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 26,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 27,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 28,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 29,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 30,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0202FF",
          "id": 31,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 32,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 33,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 35,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 36,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 1,
      "name": "PBL",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-11-18T14:44:55.000000Z"
    },
    "control_board_id": 1,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 1,
    "id": 6,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1100PSC-126.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/10738_10747_PB1100PSC2_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1100PSC2",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1100PSC2",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2023-01-06T13:07:39.000000Z"
  },
  "PB1100PSC3": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 25,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 26,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 27,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 28,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 29,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 30,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0202FF",
          "id": 31,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 32,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 33,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 35,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 36,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 1,
      "name": "PBL",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-11-18T14:44:55.000000Z"
    },
    "control_board_id": 1,
    "created_at": "2023-10-16T22:32:12.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 99,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1100PSC3.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/11044_PB1100PSC3_owners_manual.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1100PSC3",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1100PSC3",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2023-10-24T21:14:32.000000Z"
  },
  "PB1100SP/SPW": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 52,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1100sp.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Sportsman/PBSP_Owners_Manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1100SP/SPW",
    "name_text_color": "#DC582A",
    "part_number": "PB1100SP/SPW",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-09T13:29:38.000000Z"
  },
  "PB1150 PS3": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 59,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 60,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 61,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 62,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 63,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": "2023-01-11T15:20:42.000000Z"
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 64,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2023-01-11T15:21:06.000000Z"
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 65,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 66,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 67,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 69,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 70,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": "2023-01-11T15:20:22.000000Z",
          "deleted_at": null,
          "description": "Set Probe 2 temperature",
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0503'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 117,
          "name": "Set Probe 2 Temperature",
          "slug": "set-probe-2-temperature",
          "updated_at": "2023-01-11T15:20:22.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 7,
      "name": "PBT",
      "platform_id": 3,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 47) {\r\n  return null;\r\n}\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\n\r\nconst status = {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  moduleIsOn: parts[27] === 1,\r\n  err1: parts[28] === 1,\r\n  err2: parts[29] === 1,\r\n  err3: parts[30] === 1,\r\n  highTempErr: parts[31] === 1,\r\n  fanErr: parts[32] === 1,\r\n  hotErr: parts[33] === 1,\r\n  motorErr: parts[34] === 1,\r\n  noPellets: parts[35] === 1,\r\n  erL: parts[36] === 1,\r\n  fanState: parts[37] === 1,\r\n  hotState: parts[38] === 1,\r\n  motorState: parts[39] === 1,\r\n  lightState: parts[40] === 1,\r\n  primeState: parts[41] === 1,\r\n  isFahrenheit: parts[42] === 1,\r\n  recipeStep: parts[43],\r\n  recipeTime: parts[44] * 3600 + parts[45] * 60 + parts[46],\r\n};\r\nswitch (parts[26]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 23);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 23);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.p1Target =  ftoc(status.p1Target);\r\n  status.p2Target =  ftoc(status.p2Target);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 30) {\r\n  return null;\r\n}\r\n\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\n\r\nconst temps = {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  grillSetTemp: convertTemperature(parts, 23),\r\n  grillTemp: convertTemperature(parts, 26),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  isFahrenheit: parts[29] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Target =  ftoc(temps.p1Target);\r\n  temps.p2Target =  ftoc(temps.p2Target);\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2023-01-11T15:19:36.000000Z"
    },
    "control_board_id": 7,
    "created_at": "2023-02-01T16:44:09.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 91,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1150PS3.png",
    "lights": 0,
    "manual_url": null,
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1150 PS3",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1150 PS3",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2023-02-01T16:44:09.000000Z"
  },
  "PB1150G/GW": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 54,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/Nav-1150.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Navigator/PB550G_PB700G_PB850G_PB1150G_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1150G/GW",
    "name_text_color": "#2B77BC",
    "part_number": "PB1150G/GW",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-09T13:26:40.000000Z"
  },
  "PB1150PS2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 25,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 26,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 27,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 28,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 29,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 30,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0202FF",
          "id": 31,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 32,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 33,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 35,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 36,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 1,
      "name": "PBL",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-11-18T14:44:55.000000Z"
    },
    "control_board_id": 1,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 1,
    "id": 9,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1150PS2-2020-5-22-107.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/10832_PB1150PS2_manual_230V_ML.pdf",
    "max_temp": "500",
    "meat_probes": 4,
    "min_temp": "180",
    "name": "PB1150PS2",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1150PS2",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/190/200/210/220/230/240/250/260/270/280/290/300/325/350/375/400/450/500",
    "updated_at": "2022-10-31T14:01:36.000000Z"
  },
  "PB1150PS3": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 71,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 72,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 73,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 74,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 75,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 76,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 77,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 78,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 79,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 81,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 82,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": "2022-12-22T09:05:29.000000Z",
          "deleted_at": null,
          "description": "set the target temperature of probe #2",
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0503'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 115,
          "name": "Set Probe 2 Temperature",
          "slug": "set-probe-2-temperature",
          "updated_at": "2022-12-22T09:05:29.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 10,
      "name": "PBA",
      "platform_id": 2,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 47) {\r\n  return null;\r\n}\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\n\r\nconst status = {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  moduleIsOn: parts[27] === 1,\r\n  err1: parts[28] === 1,\r\n  err2: parts[29] === 1,\r\n  err3: parts[30] === 1,\r\n  highTempErr: parts[31] === 1,\r\n  fanErr: parts[32] === 1,\r\n  hotErr: parts[33] === 1,\r\n  motorErr: parts[34] === 1,\r\n  noPellets: parts[35] === 1,\r\n  erL: parts[36] === 1,\r\n  fanState: parts[37] === 1,\r\n  hotState: parts[38] === 1,\r\n  motorState: parts[39] === 1,\r\n  lightState: parts[40] === 1,\r\n  primeState: parts[41] === 1,\r\n  isFahrenheit: parts[42] === 1,\r\n  recipeStep: parts[43],\r\n  recipeTime: parts[44] * 3600 + parts[45] * 60 + parts[46],\r\n};\r\nswitch (parts[26]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 23);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 23);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 30) {\r\n  return null;\r\n}\r\n\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\nreturn {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  grillSetTemp: convertTemperature(parts, 23),\r\n  grillTemp: convertTemperature(parts, 26),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  isFahrenheit: parts[29] === 1,\r\n};",
      "updated_at": "2022-12-22T11:44:45.000000Z"
    },
    "control_board_id": 10,
    "created_at": "2022-11-09T23:16:07.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 74,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1150PS3.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/10980%2010983_PB1150PS3_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1150PS3",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1150PS3",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2022-12-01T10:30:38.000000Z"
  },
  "PB1230": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 58,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/pitboss-logo-transparent.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/10515_10694_PB1230_manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1230",
    "name_text_color": "#2B77BC",
    "part_number": "PB1230",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T15:02:18.000000Z"
  },
  "PB1230CS1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 37,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 38,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 40,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 41,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 42,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 43,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 45,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 46,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 6,
      "name": "PBM",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 36) {\r\n  return null;\r\n}\r\nconst status = {\r\n // p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  moduleIsOn: parts[18] === 1,\r\n  err1: parts[19] === 1,\r\n  err2: parts[20] === 1,\r\n  err3: parts[21] === 1,\r\n  highTempErr: parts[22] === 1,\r\n  fanErr: parts[23] === 1,\r\n  hotErr: parts[24] === 1,\r\n  motorErr: parts[25] === 1,\r\n  noPellets: parts[26] === 1,\r\n  fanState: parts[27] === 1,\r\n  hotState: parts[28] === 1,\r\n  motorState: parts[29] === 1,\r\n  lightState: parts[30] === 1,\r\n  isFahrenheit: parts[31] === 1,\r\n  recipeStep: parts[32],\r\n  recipeTime: parts[33] * 3600 + parts[34] * 60 + parts[35],\r\n};\r\nswitch (parts[17]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 14);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 14);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 21) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n  //  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  grillSetTemp: convertTemperature(parts, 14),\r\n  grillTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[20] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-11-04T07:23:53.000000Z"
    },
    "control_board_id": 6,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 72,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1230CS1-2021-9-17-tank-with-cover116.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Competition/10923_PB1230CS1_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1230CS1",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1230CS1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2022-10-31T15:20:59.000000Z"
  },
  "PB1230G/GW": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 61,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1230G-2019-10-21-109.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Navigator/10618_PB1230G_Owners%20Manual_230V_ML.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1230G/GW",
    "name_text_color": "#2B77BC",
    "part_number": "PB1230G/GW",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T15:05:10.000000Z"
  },
  "PB1230SP/SPW": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 57,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1230sp-112.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Sportsman/10568_10533_PB1230SP_Owners_Manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1230SP/SPW",
    "name_text_color": "#DC582A",
    "part_number": "PB1230SP/SPW",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T15:01:53.000000Z"
  },
  "PB1250CS": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 37,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 38,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 40,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 41,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 42,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 43,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 45,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 46,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 6,
      "name": "PBM",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 36) {\r\n  return null;\r\n}\r\nconst status = {\r\n // p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  moduleIsOn: parts[18] === 1,\r\n  err1: parts[19] === 1,\r\n  err2: parts[20] === 1,\r\n  err3: parts[21] === 1,\r\n  highTempErr: parts[22] === 1,\r\n  fanErr: parts[23] === 1,\r\n  hotErr: parts[24] === 1,\r\n  motorErr: parts[25] === 1,\r\n  noPellets: parts[26] === 1,\r\n  fanState: parts[27] === 1,\r\n  hotState: parts[28] === 1,\r\n  motorState: parts[29] === 1,\r\n  lightState: parts[30] === 1,\r\n  isFahrenheit: parts[31] === 1,\r\n  recipeStep: parts[32],\r\n  recipeTime: parts[33] * 3600 + parts[34] * 60 + parts[35],\r\n};\r\nswitch (parts[17]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 14);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 14);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 21) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n  //  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  grillSetTemp: convertTemperature(parts, 14),\r\n  grillTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[20] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-11-04T07:23:53.000000Z"
    },
    "control_board_id": 6,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 68,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1250CS-2021-10-14-EN-124.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Competition/PB1250CS_PB1600CS_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1250CS",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1250CS",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2022-11-09T11:21:57.000000Z"
  },
  "PB1285KC": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 13,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 14,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 15,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 16,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 18,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 19,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 20,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 21,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 23,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 24,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 3,
      "name": "PBG",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:11:46.000000Z"
    },
    "control_board_id": 3,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 2,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1285KC-103.png",
    "lights": 2,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Platinum-Series/10499_10879_PB1285KC_manual_110V_EN_FR_ES%20%281%29.pdf",
    "max_temp": "High",
    "meat_probes": 2,
    "min_temp": "Smoke",
    "name": "PB1285KC",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1285KC",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/275/300/325/350/375/400/425/450/500",
    "updated_at": "2022-10-31T13:50:07.000000Z"
  },
  "PB1450CS": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 37,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 38,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 40,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 41,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 42,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 43,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 45,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 46,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 6,
      "name": "PBM",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 36) {\r\n  return null;\r\n}\r\nconst status = {\r\n // p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  moduleIsOn: parts[18] === 1,\r\n  err1: parts[19] === 1,\r\n  err2: parts[20] === 1,\r\n  err3: parts[21] === 1,\r\n  highTempErr: parts[22] === 1,\r\n  fanErr: parts[23] === 1,\r\n  hotErr: parts[24] === 1,\r\n  motorErr: parts[25] === 1,\r\n  noPellets: parts[26] === 1,\r\n  fanState: parts[27] === 1,\r\n  hotState: parts[28] === 1,\r\n  motorState: parts[29] === 1,\r\n  lightState: parts[30] === 1,\r\n  isFahrenheit: parts[31] === 1,\r\n  recipeStep: parts[32],\r\n  recipeTime: parts[33] * 3600 + parts[34] * 60 + parts[35],\r\n};\r\nswitch (parts[17]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 14);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 14);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 21) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n  //  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  grillSetTemp: convertTemperature(parts, 14),\r\n  grillTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[20] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-11-04T07:23:53.000000Z"
    },
    "control_board_id": 6,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 69,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1450CS-2021-10-14-124.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Competition/PB1450CS_OwnersManual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1450CS",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1450CS",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2022-10-31T15:19:26.000000Z"
  },
  "PB1600 PSE": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:03:14.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 118,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": "2023-01-25T12:03:14.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:03:34.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 119,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": "2023-01-25T12:03:34.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:03:55.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 120,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": "2023-01-25T12:03:55.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:04:30.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 121,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2023-01-25T12:04:30.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:05:05.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 122,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": "2023-01-25T12:05:05.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:05:28.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 123,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2023-01-25T12:05:28.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:06:00.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 124,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2023-01-25T12:06:00.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:06:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 125,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2023-01-25T12:06:19.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:06:48.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 126,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2023-01-25T12:06:48.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:07:10.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0503'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 127,
          "name": "Set Probe 2 Temperature",
          "slug": "set-probe-2-temperature",
          "updated_at": "2023-01-25T12:07:10.000000Z"
        }
      ],
      "created_at": "2023-01-25T11:59:54.000000Z",
      "deleted_at": null,
      "id": 12,
      "name": "PBD",
      "platform_id": 3,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 47) {\r\n  return null;\r\n}\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\n\r\nconst status = {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  moduleIsOn: parts[27] === 1,\r\n  err1: parts[28] === 1,\r\n  err2: parts[29] === 1,\r\n  err3: parts[30] === 1,\r\n  highTempErr: parts[31] === 1,\r\n  fanErr: parts[32] === 1,\r\n  hotErr: parts[33] === 1,\r\n  motorErr: parts[34] === 1,\r\n  noPellets: parts[35] === 1,\r\n  erL: parts[36] === 1,\r\n  fanState: parts[37] === 1,\r\n  hotState: parts[38] === 1,\r\n  motorState: parts[39] === 1,\r\n  lightState: parts[40] === 1,\r\n  primeState: parts[41] === 1,\r\n  isFahrenheit: parts[42] === 1,\r\n  recipeStep: parts[43],\r\n  recipeTime: parts[44] * 3600 + parts[45] * 60 + parts[46],\r\n};\r\nswitch (parts[26]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 23);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 23);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 30) {\r\n  return null;\r\n}\r\n\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\nreturn {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  grillSetTemp: convertTemperature(parts, 23),\r\n  grillTemp: convertTemperature(parts, 26),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  isFahrenheit: parts[29] === 1,\r\n};",
      "updated_at": "2023-01-25T12:01:54.000000Z"
    },
    "control_board_id": 12,
    "created_at": "2023-01-25T12:01:10.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 89,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1600PS.Elite2024.png",
    "lights": 0,
    "manual_url": null,
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "150",
    "name": "PB1600 PSE",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1600PSE",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "150/155/160/165/170/175/180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2023-01-25T12:01:10.000000Z"
  },
  "PB1600CS": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 37,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 38,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 40,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 41,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 42,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 43,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 45,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 46,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 6,
      "name": "PBM",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 36) {\r\n  return null;\r\n}\r\nconst status = {\r\n // p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  moduleIsOn: parts[18] === 1,\r\n  err1: parts[19] === 1,\r\n  err2: parts[20] === 1,\r\n  err3: parts[21] === 1,\r\n  highTempErr: parts[22] === 1,\r\n  fanErr: parts[23] === 1,\r\n  hotErr: parts[24] === 1,\r\n  motorErr: parts[25] === 1,\r\n  noPellets: parts[26] === 1,\r\n  fanState: parts[27] === 1,\r\n  hotState: parts[28] === 1,\r\n  motorState: parts[29] === 1,\r\n  lightState: parts[30] === 1,\r\n  isFahrenheit: parts[31] === 1,\r\n  recipeStep: parts[32],\r\n  recipeTime: parts[33] * 3600 + parts[34] * 60 + parts[35],\r\n};\r\nswitch (parts[17]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 14);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 14);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 21) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n  //  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  grillSetTemp: convertTemperature(parts, 14),\r\n  grillTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[20] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-11-04T07:23:53.000000Z"
    },
    "control_board_id": 6,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 70,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1600CS-2021-10-14-EN-119.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Competition/PB1250CS_PB1600CS_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1600CS",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1600CS",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2022-11-09T11:58:36.000000Z"
  },
  "PB1600PS1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 25,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 26,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 27,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 28,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 29,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 30,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0202FF",
          "id": 31,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 32,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 33,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 35,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 36,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 1,
      "name": "PBL",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-11-18T14:44:55.000000Z"
    },
    "control_board_id": 1,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 1,
    "id": 5,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1600PS1-2020-5-22-single-105.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/10737_PB1600PS1_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 4,
    "min_temp": "180",
    "name": "PB1600PS1",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1600PS1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/190/200/210/220/230/240/250/260/270/280/290/300/325/350/375/400/450/500",
    "updated_at": "2023-02-21T08:43:33.000000Z"
  },
  "PB1600PS2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:48:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 128,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": "2023-03-20T11:48:19.000000Z"
        },
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:49:37.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 129,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": "2023-03-20T11:49:37.000000Z"
        },
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:50:37.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 130,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": "2023-03-20T11:50:37.000000Z"
        },
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:51:32.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 131,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2023-03-20T11:51:32.000000Z"
        },
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:52:27.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 132,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": "2023-03-20T11:52:27.000000Z"
        },
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:54:16.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 133,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2023-03-20T11:54:16.000000Z"
        },
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:55:17.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0202FF",
          "id": 134,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2023-03-20T11:55:17.000000Z"
        },
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:56:32.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 135,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2023-03-20T11:56:32.000000Z"
        },
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:57:37.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 136,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2023-03-20T11:57:37.000000Z"
        },
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:58:26.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 137,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": "2023-03-20T11:58:26.000000Z"
        },
        {
          "control_board_id": 13,
          "created_at": "2023-03-20T11:59:11.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 138,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": "2023-03-20T11:59:11.000000Z"
        }
      ],
      "created_at": "2023-03-20T11:44:59.000000Z",
      "deleted_at": null,
      "id": 13,
      "name": "PBP",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2023-03-20T11:44:59.000000Z"
    },
    "control_board_id": 13,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 1,
    "id": 92,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1600PS2-2021-8-17-120.png",
    "lights": 1,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/10908_PB1600PS2_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 4,
    "min_temp": "150",
    "name": "PB1600PS2",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1600PS2",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "150/155/160/165/170/175/180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2023-11-01T21:16:08.000000Z"
  },
  "PB1600PS3": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 71,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 72,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 73,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 74,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 75,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 76,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 77,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 78,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 79,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 81,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 82,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        },
        {
          "control_board_id": 10,
          "created_at": "2022-12-22T09:05:29.000000Z",
          "deleted_at": null,
          "description": "set the target temperature of probe #2",
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0503'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 115,
          "name": "Set Probe 2 Temperature",
          "slug": "set-probe-2-temperature",
          "updated_at": "2022-12-22T09:05:29.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 10,
      "name": "PBA",
      "platform_id": 2,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 47) {\r\n  return null;\r\n}\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\n\r\nconst status = {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  moduleIsOn: parts[27] === 1,\r\n  err1: parts[28] === 1,\r\n  err2: parts[29] === 1,\r\n  err3: parts[30] === 1,\r\n  highTempErr: parts[31] === 1,\r\n  fanErr: parts[32] === 1,\r\n  hotErr: parts[33] === 1,\r\n  motorErr: parts[34] === 1,\r\n  noPellets: parts[35] === 1,\r\n  erL: parts[36] === 1,\r\n  fanState: parts[37] === 1,\r\n  hotState: parts[38] === 1,\r\n  motorState: parts[39] === 1,\r\n  lightState: parts[40] === 1,\r\n  primeState: parts[41] === 1,\r\n  isFahrenheit: parts[42] === 1,\r\n  recipeStep: parts[43],\r\n  recipeTime: parts[44] * 3600 + parts[45] * 60 + parts[46],\r\n};\r\nswitch (parts[26]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 23);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 23);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 30) {\r\n  return null;\r\n}\r\n\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\nreturn {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  grillSetTemp: convertTemperature(parts, 23),\r\n  grillTemp: convertTemperature(parts, 26),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  isFahrenheit: parts[29] === 1,\r\n};",
      "updated_at": "2022-12-22T11:44:45.000000Z"
    },
    "control_board_id": 10,
    "created_at": "2022-11-09T23:18:25.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 75,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1600PS3.png",
    "lights": 1,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/10981%2010984_PB1600PS3_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1600PS3",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1600PS3",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2022-12-01T10:44:39.000000Z"
  },
  "PB1600PS3_": {
    "category": "N/A",
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 59,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 60,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 61,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 62,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 63,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": "2023-01-11T15:20:42.000000Z"
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 64,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2023-01-11T15:21:06.000000Z"
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 65,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 66,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 67,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 69,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 70,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        },
        {
          "control_board_id": 7,
          "created_at": "2023-01-11T15:20:22.000000Z",
          "deleted_at": null,
          "description": "Set Probe 2 temperature",
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0503'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 117,
          "name": "Set Probe 2 Temperature",
          "slug": "set-probe-2-temperature",
          "updated_at": "2023-01-11T15:20:22.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 7,
      "name": "PBT",
      "platform_id": 3,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 47) {\r\n  return null;\r\n}\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\n\r\nconst status = {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  moduleIsOn: parts[27] === 1,\r\n  err1: parts[28] === 1,\r\n  err2: parts[29] === 1,\r\n  err3: parts[30] === 1,\r\n  highTempErr: parts[31] === 1,\r\n  fanErr: parts[32] === 1,\r\n  hotErr: parts[33] === 1,\r\n  motorErr: parts[34] === 1,\r\n  noPellets: parts[35] === 1,\r\n  erL: parts[36] === 1,\r\n  fanState: parts[37] === 1,\r\n  hotState: parts[38] === 1,\r\n  motorState: parts[39] === 1,\r\n  lightState: parts[40] === 1,\r\n  primeState: parts[41] === 1,\r\n  isFahrenheit: parts[42] === 1,\r\n  recipeStep: parts[43],\r\n  recipeTime: parts[44] * 3600 + parts[45] * 60 + parts[46],\r\n};\r\nswitch (parts[26]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 23);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 23);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.p1Target =  ftoc(status.p1Target);\r\n  status.p2Target =  ftoc(status.p2Target);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 30) {\r\n  return null;\r\n}\r\n\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\n\r\nconst temps = {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  grillSetTemp: convertTemperature(parts, 23),\r\n  grillTemp: convertTemperature(parts, 26),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  isFahrenheit: parts[29] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Target =  ftoc(temps.p1Target);\r\n  temps.p2Target =  ftoc(temps.p2Target);\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2023-01-11T15:19:36.000000Z"
    },
    "control_board_id": 7,
    "created_at": "2023-01-10T11:58:26.000000Z",
    "deleted_at": null,
    "description": "<p>N/A</p>",
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 88,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1600PS3.png",
    "lights": 0,
    "manual_url": null,
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1600PS3_",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1600PS3",
    "screen_orientation": "Horizontal",
    "shopify_product_id": "N/A",
    "site_id": 1,
    "sku": "N/A",
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2023-01-10T11:58:26.000000Z"
  },
  "PB1600PSE": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 83,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 84,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 85,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 86,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 87,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 88,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 89,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 90,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 91,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 93,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 94,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": "2023-01-03T10:03:36.000000Z",
          "deleted_at": null,
          "description": "set the target temperature of probe #2",
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0503'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 116,
          "name": "Set Probe 2 Temperature",
          "slug": "set-probe-2-temperature",
          "updated_at": "2023-01-03T10:03:36.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 11,
      "name": "PBB",
      "platform_id": 2,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 47) {\r\n  return null;\r\n}\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\n\r\nconst status = {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  moduleIsOn: parts[27] === 1,\r\n  err1: parts[28] === 1,\r\n  err2: parts[29] === 1,\r\n  err3: parts[30] === 1,\r\n  highTempErr: parts[31] === 1,\r\n  fanErr: parts[32] === 1,\r\n  hotErr: parts[33] === 1,\r\n  motorErr: parts[34] === 1,\r\n  noPellets: parts[35] === 1,\r\n  erL: parts[36] === 1,\r\n  fanState: parts[37] === 1,\r\n  hotState: parts[38] === 1,\r\n  motorState: parts[39] === 1,\r\n  lightState: parts[40] === 1,\r\n  primeState: parts[41] === 1,\r\n  isFahrenheit: parts[42] === 1,\r\n  recipeStep: parts[43],\r\n  recipeTime: parts[44] * 3600 + parts[45] * 60 + parts[46],\r\n};\r\nswitch (parts[26]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 23);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 23);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 30) {\r\n  return null;\r\n}\r\n\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\nreturn {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  grillSetTemp: convertTemperature(parts, 23),\r\n  grillTemp: convertTemperature(parts, 26),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  isFahrenheit: parts[29] === 1,\r\n};",
      "updated_at": "2022-12-22T11:45:57.000000Z"
    },
    "control_board_id": 11,
    "created_at": "2022-11-09T23:20:07.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 76,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1600PS.Elite2024.png",
    "lights": 1,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/10982_PB1600PSE_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "150",
    "name": "PB1600PSE",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1600PSE",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "150/155/160/165/170/175/180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2022-12-01T10:47:00.000000Z"
  },
  "PB1600SPW": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 37,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 38,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 40,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 41,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 42,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 43,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 45,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 46,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 6,
      "name": "PBM",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 36) {\r\n  return null;\r\n}\r\nconst status = {\r\n // p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  moduleIsOn: parts[18] === 1,\r\n  err1: parts[19] === 1,\r\n  err2: parts[20] === 1,\r\n  err3: parts[21] === 1,\r\n  highTempErr: parts[22] === 1,\r\n  fanErr: parts[23] === 1,\r\n  hotErr: parts[24] === 1,\r\n  motorErr: parts[25] === 1,\r\n  noPellets: parts[26] === 1,\r\n  fanState: parts[27] === 1,\r\n  hotState: parts[28] === 1,\r\n  motorState: parts[29] === 1,\r\n  lightState: parts[30] === 1,\r\n  isFahrenheit: parts[31] === 1,\r\n  recipeStep: parts[32],\r\n  recipeTime: parts[33] * 3600 + parts[34] * 60 + parts[35],\r\n};\r\nswitch (parts[17]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 14);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 14);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 21) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n  //  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  grillSetTemp: convertTemperature(parts, 14),\r\n  grillTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[20] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-11-04T07:23:53.000000Z"
    },
    "control_board_id": 6,
    "created_at": "2023-09-27T18:20:06.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 98,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1600SPW.png",
    "lights": 0,
    "manual_url": null,
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB1600SPW",
    "name_text_color": "#A1A1A1",
    "part_number": "PB1600SPW",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2023-09-27T18:20:06.000000Z"
  },
  "PB2180LK": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 13,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 14,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 15,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 16,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 18,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 19,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 20,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 21,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 23,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 24,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 3,
      "name": "PBG",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:11:46.000000Z"
    },
    "control_board_id": 3,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 3,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB2180LK-2020-3-16-105.png",
    "lights": 2,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Platinum-Series/10500_PB2180LK_manualUSA_EN_FR_ES.pdf",
    "max_temp": "High",
    "meat_probes": 4,
    "min_temp": "Smoke",
    "name": "PB2180LK",
    "name_text_color": "#A1A1A1",
    "part_number": "PB2180LK",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "160/180/200/225/250/275/300/325/350/375/400/425/450/500",
    "updated_at": "2022-11-02T11:01:39.000000Z"
  },
  "PB340": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 10,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB340.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/71343_PB340_manualUSA_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB340",
    "name_text_color": "#2B77BC",
    "part_number": "PB340",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:08:47.000000Z"
  },
  "PB340TGW1 (Tailgator)": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 62,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB340TGW1-2018-9-20-abby-22.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Copper/71344_PB340TGW1_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB340TGW1 (Tailgator)",
    "name_text_color": "#AD6B4E",
    "part_number": "PB340TGW1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T15:09:51.000000Z"
  },
  "PB440D": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 11,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB440D3-2019-4-18-abby.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72440_PB440D_manualCAN_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB440D",
    "name_text_color": "#2B77BC",
    "part_number": "PB440D",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:09:08.000000Z"
  },
  "PB440D2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 42,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB440D2-2019-1-7-abby-23.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/10735_72455_PB440D2_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB440D2",
    "name_text_color": "#2B77BC",
    "part_number": "PB440D2",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:47:39.000000Z"
  },
  "PB440D3/PB456D": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 41,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/pb456d.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/10250_10251_PB456D_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB440D3/PB456D",
    "name_text_color": "#2B77BC",
    "part_number": "PB440D3(PB456D)",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:47:14.000000Z"
  },
  "PB440TG1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 12,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB440TG1.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72445_72448_PB440TG1_manualCAN_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB440TG1",
    "name_text_color": "#2B77BC",
    "part_number": "PB440TG1",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:09:51.000000Z"
  },
  "PB440TGNC1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 45,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB440TGNC1.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Nascar/10400_PBPEL44010400_manualUSA_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB440TGNC1",
    "name_text_color": "#2B77BC",
    "part_number": "PB440TGNC1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:48:52.000000Z"
  },
  "PB440TGR1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 13,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB440TGR1.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72445_72448_PB440TG1_manualCAN_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB440TGR1",
    "name_text_color": "#2B77BC",
    "part_number": "PB440TGR1",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-08T10:46:19.000000Z"
  },
  "PB550G": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 60,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/550-nav-109.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Navigator/PB550G_PB700G_PB850G_PB1150G_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB550G",
    "name_text_color": "#2B77BC",
    "part_number": "PB550G",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-09T13:26:01.000000Z"
  },
  "PB700D": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 14,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB700D.Canada.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72700_PB700D_manual_USA_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB700D",
    "name_text_color": "#2B77BC",
    "part_number": "PB700D",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-07T14:02:23.000000Z"
  },
  "PB700FB": {
    "category": "Wood Pellet",
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 19,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/pitboss700FB.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/71700FB_71703_10660_PB700FB_manual_110V_EN_FR_ES%20%281%29.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB700FB",
    "name_text_color": "#2B77BC",
    "part_number": "PB700FB",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:13:54.000000Z"
  },
  "PB700FBM2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 20,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB700FBM2.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/71725_PB700FBM2_manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB700FBM2",
    "name_text_color": "#2B77BC",
    "part_number": "PB700FBM2",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-07T11:31:50.000000Z"
  },
  "PB700FBW2 (Classic)": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 63,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/Copper-classic-pb700-8.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Copper/71705_PB700FBW2_manualCAN_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB700FBW2 (Classic)",
    "name_text_color": "#AD6B4E",
    "part_number": "PB700FBW2",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T15:08:27.000000Z"
  },
  "PB700NC1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 46,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/pb700nc1-110.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Nascar/10401_PBPEL70010401_manual_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB700NC1",
    "name_text_color": "#2B77BC",
    "part_number": "PB700NC1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:49:14.000000Z"
  },
  "PB700R1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 15,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB700R1-2019-1-22-abby-21.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/R-Series/72700_PB700R1_manualUSA_EN.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB700R1",
    "name_text_color": "#2B77BC",
    "part_number": "PB700R1",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:11:19.000000Z"
  },
  "PB700R2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 22,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB700R2-2019-7-1-Abby-111.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/R-Series/10539_10681_PB700R2_manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB700R2",
    "name_text_color": "#2B77BC",
    "part_number": "PB700R2",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:15:13.000000Z"
  },
  "PB700S": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 16,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/pb700s.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72711_PB700S_manual_110V_EN.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB700S",
    "name_text_color": "#2B77BC",
    "part_number": "PB700S",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:12:37.000000Z"
  },
  "PB700S1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 17,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB700S1-26.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72724_PB700S1_manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB700S1",
    "name_text_color": "#2B77BC",
    "part_number": "PB700S1",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:13:01.000000Z"
  },
  "PB700S2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 23,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB700S2-2019-1-22-abby-27.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72725_PB700S2_manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB700S2",
    "name_text_color": "#2B77BC",
    "part_number": "PB700S2",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:17:18.000000Z"
  },
  "PB700SC": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 21,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB700SC-2019-1-22-abby-125.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72700SC_72707_PB700SC_manualUSA_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB700SC",
    "name_text_color": "#2B77BC",
    "part_number": "PB700SC",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:14:49.000000Z"
  },
  "PB700T1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 18,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB700T1-114.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Traditional/10771_PB700T1_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB700T1",
    "name_text_color": "#2B77BC",
    "part_number": "PB700T1",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:13:23.000000Z"
  },
  "PB820CS1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 37,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 38,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 40,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 41,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 42,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 43,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 45,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 46,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 6,
      "name": "PBM",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 36) {\r\n  return null;\r\n}\r\nconst status = {\r\n // p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  moduleIsOn: parts[18] === 1,\r\n  err1: parts[19] === 1,\r\n  err2: parts[20] === 1,\r\n  err3: parts[21] === 1,\r\n  highTempErr: parts[22] === 1,\r\n  fanErr: parts[23] === 1,\r\n  hotErr: parts[24] === 1,\r\n  motorErr: parts[25] === 1,\r\n  noPellets: parts[26] === 1,\r\n  fanState: parts[27] === 1,\r\n  hotState: parts[28] === 1,\r\n  motorState: parts[29] === 1,\r\n  lightState: parts[30] === 1,\r\n  isFahrenheit: parts[31] === 1,\r\n  recipeStep: parts[32],\r\n  recipeTime: parts[33] * 3600 + parts[34] * 60 + parts[35],\r\n};\r\nswitch (parts[17]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 14);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 14);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 21) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n  //  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  grillSetTemp: convertTemperature(parts, 14),\r\n  grillTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[20] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-11-04T07:23:53.000000Z"
    },
    "control_board_id": 6,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 71,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB820CS1-2021-7-20-28.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Competition/10922_10931_PB820CS1_owners_manual%20%285%29.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB820CS1",
    "name_text_color": "#A1A1A1",
    "part_number": "PB820CS1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2023-07-06T13:15:47.000000Z"
  },
  "PB820D": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 24,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB820D.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72820_PB820D_manualUSA_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB820D",
    "name_text_color": "#2B77BC",
    "part_number": "PB820D",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-03T15:41:33.000000Z"
  },
  "PB820D2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 36,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB820D2-2019-1-7-abby-29.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72460_PB820D2_manualCAN_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB820D2",
    "name_text_color": "#2B77BC",
    "part_number": "PB820D2",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:42:07.000000Z"
  },
  "PB820D3": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 44,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB0820D3-2019-11-7-EN-AN-FR-116.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/10970_PB0820D3_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB820D3",
    "name_text_color": "#2B77BC",
    "part_number": "PB820D3",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:48:27.000000Z"
  },
  "PB820D4": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 55,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB820D4.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/10899_PB820D4_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB820D4",
    "name_text_color": "#2B77BC",
    "part_number": "PB820D4",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-08T10:05:24.000000Z"
  },
  "PB820FB": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 27,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/pb820fb.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/71820FB_PB820FB_manualUSA_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB820FB",
    "name_text_color": "#2B77BC",
    "part_number": "PB820FB",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:19:37.000000Z"
  },
  "PB820FBC": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 28,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB820FBC.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/71821_PB820FBC_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB820FBC",
    "name_text_color": "#2B77BC",
    "part_number": "PB820FBC",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-07T13:46:15.000000Z"
  },
  "PB820PS1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 37,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/pb820ps1.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/72770_PB820PS1_manualUSA_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB820PS1",
    "name_text_color": "#2B77BC",
    "part_number": "PB820PS1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:45:26.000000Z"
  },
  "PB820S": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 26,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/pb_820S.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/PB820S_manual_USA.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB820S",
    "name_text_color": "#2B77BC",
    "part_number": "PB820S",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:19:15.000000Z"
  },
  "PB820SC": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 29,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB820SC.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/72820SC_PB820SC_manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB820SC",
    "name_text_color": "#2B77BC",
    "part_number": "PB820SC",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:20:45.000000Z"
  },
  "PB820T1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 0,
    "id": 25,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB820T1.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Traditional/PB820T1_manual_USA_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 3,
    "min_temp": "180",
    "name": "PB820T1",
    "name_text_color": "#2B77BC",
    "part_number": "PB820T1",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-07T15:33:21.000000Z"
  },
  "PB820XL/PB820ME": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 39,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/820xl.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Standard/10589_PB820XL_manual_110V_EN_FR.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB820XL/PB820ME",
    "name_text_color": "#2B77BC",
    "part_number": "PB820XL/PB820ME",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-10-31T14:46:16.000000Z"
  },
  "PB850CS1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 37,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 38,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 40,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 41,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 42,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 43,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 45,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 46,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 6,
      "name": "PBM",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 36) {\r\n  return null;\r\n}\r\nconst status = {\r\n // p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  moduleIsOn: parts[18] === 1,\r\n  err1: parts[19] === 1,\r\n  err2: parts[20] === 1,\r\n  err3: parts[21] === 1,\r\n  highTempErr: parts[22] === 1,\r\n  fanErr: parts[23] === 1,\r\n  hotErr: parts[24] === 1,\r\n  motorErr: parts[25] === 1,\r\n  noPellets: parts[26] === 1,\r\n  fanState: parts[27] === 1,\r\n  hotState: parts[28] === 1,\r\n  motorState: parts[29] === 1,\r\n  lightState: parts[30] === 1,\r\n  isFahrenheit: parts[31] === 1,\r\n  recipeStep: parts[32],\r\n  recipeTime: parts[33] * 3600 + parts[34] * 60 + parts[35],\r\n};\r\nswitch (parts[17]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 14);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 14);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 21) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n  //  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  grillSetTemp: convertTemperature(parts, 14),\r\n  grillTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[20] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-11-04T07:23:53.000000Z"
    },
    "control_board_id": 6,
    "created_at": "2023-07-06T08:48:37.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 96,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB820CS1-2021-7-20-28.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Competition/10922_10931_PB850CS1_Manual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB850CS1",
    "name_text_color": "#A1A1A1",
    "part_number": "PB850CS1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2023-07-06T13:16:21.000000Z"
  },
  "PB850G/GW": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 53,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/850-nav-109.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Navigator/PB550G_PB700G_PB850G_PB1150G_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB850G/GW",
    "name_text_color": "#2B77BC",
    "part_number": "PB850G/GW",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/200/225/250/300/350/400/450/475/500",
    "updated_at": "2022-11-09T13:26:19.000000Z"
  },
  "PB850PS2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 25,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 26,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 27,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 28,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 29,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 30,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0202FF",
          "id": 31,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 32,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 33,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 35,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 36,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 1,
      "name": "PBL",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-11-18T14:44:55.000000Z"
    },
    "control_board_id": 1,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 1,
    "id": 8,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB850PS2-2020-5-26-107.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/10831_PB850PS2_manual_230V_ML.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PB850PS2",
    "name_text_color": "#A1A1A1",
    "part_number": "PB850PS2",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/190/200/210/220/230/240/250/260/270/280/290/300/325/350/375/400/450/500",
    "updated_at": "2022-10-31T11:40:06.000000Z"
  },
  "PBV4PS2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 25,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 26,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 27,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 28,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 29,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 30,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0202FF",
          "id": 31,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 32,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 33,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 35,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 1,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 36,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 1,
      "name": "PBL",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-11-18T14:44:55.000000Z"
    },
    "control_board_id": 1,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 1,
    "has_recipe_functionality": 1,
    "id": 7,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PBV4PS2.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/10803_PBV4PS2_manual_230V_ML.pdf",
    "max_temp": "420",
    "meat_probes": 2,
    "min_temp": "130",
    "name": "PBV4PS2",
    "name_text_color": "#A1A1A1",
    "part_number": "PBV4PS2",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "130/140/150/160/170/180/190/200/210/220/230/240/250/260/270/280/290/300/310/320/330/340/350/360/370/380/390/400/410/420",
    "updated_at": "2022-10-31T14:00:54.000000Z"
  },
  "PBV5CS": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 66,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PBV5CS1-2021-6-17-121.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Competition/10924_PBV5CS_OwnersManual_110V_EN_FR_ES.pdf",
    "max_temp": "420",
    "meat_probes": 2,
    "min_temp": "150",
    "name": "PBV5CS",
    "name_text_color": "#A1A1A1",
    "part_number": "PBV5CS",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "150/155/160/165/170/175/180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420",
    "updated_at": "2022-10-31T15:17:31.000000Z"
  },
  "PBV5P2": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 47,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 48,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 49,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 50,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 52,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 53,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 54,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 55,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 57,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 4,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 58,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 4,
      "name": "PBV",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Target = ftoc(status.p1Target);\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.p4Temp = ftoc(status.p4Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n  status.smokerActTemp = ftoc(status.smokerActTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if (typeof temp === \"undefined\" || temp === 960) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.p4Temp = ftoc(temps.p4Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n  temps.smokerActTemp = ftoc(temps.smokerActTemp);\r\n  temps.p1Target = ftoc(temps.p1Target);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-12-22T10:11:34.000000Z"
    },
    "control_board_id": 4,
    "created_at": "2022-11-30T12:05:56.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 78,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/V5%20Competition.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Competition/10903_10904_PBV5P2_owners_manual.pdf",
    "max_temp": "420",
    "meat_probes": 3,
    "min_temp": "130",
    "name": "PBV5P2",
    "name_text_color": "#2B77BC",
    "part_number": "PBV5P2",
    "screen_orientation": "Vertical",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "130/135/140/145/150/160/170/180/190/200/210/220/230/240/250/260/270/280/290/300/310/320/330/340/350/360/370/380/390/400/410/420",
    "updated_at": "2022-12-01T10:55:35.000000Z"
  },
  "PBV5PL": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 13,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 14,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 15,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 16,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 18,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 19,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 20,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 21,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 23,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 3,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 24,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 3,
      "name": "PBG",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:11:46.000000Z"
    },
    "control_board_id": 3,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 1,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 4,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PBV5PL-2020-5-6-Brunswick-104.png",
    "lights": 1,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Platinum-Series/10577_10932_PBV5PL_manual_110V_EN_FR_ES.pdf",
    "max_temp": "420",
    "meat_probes": 2,
    "min_temp": "150",
    "name": "PBV5PL",
    "name_text_color": "#A1A1A1",
    "part_number": "PBV5PL",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "150/160/170/180/190/200/210/220/230/240/250/260/270/280/290/300/310/320/330/340/350/360/370/380/390/400/410/420",
    "updated_at": "2022-10-31T13:59:35.000000Z"
  },
  "PBV6 PSE": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:03:14.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 118,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": "2023-01-25T12:03:14.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:03:34.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 119,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": "2023-01-25T12:03:34.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:03:55.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 120,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": "2023-01-25T12:03:55.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:04:30.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 121,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2023-01-25T12:04:30.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:05:05.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 122,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": "2023-01-25T12:05:05.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:05:28.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 123,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2023-01-25T12:05:28.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:06:00.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 124,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": "2023-01-25T12:06:00.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:06:19.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 125,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": "2023-01-25T12:06:19.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:06:48.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 126,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2023-01-25T12:06:48.000000Z"
        },
        {
          "control_board_id": 12,
          "created_at": "2023-01-25T12:07:10.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0503'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 127,
          "name": "Set Probe 2 Temperature",
          "slug": "set-probe-2-temperature",
          "updated_at": "2023-01-25T12:07:10.000000Z"
        }
      ],
      "created_at": "2023-01-25T11:59:54.000000Z",
      "deleted_at": null,
      "id": 12,
      "name": "PBD",
      "platform_id": 3,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 47) {\r\n  return null;\r\n}\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\n\r\nconst status = {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  moduleIsOn: parts[27] === 1,\r\n  err1: parts[28] === 1,\r\n  err2: parts[29] === 1,\r\n  err3: parts[30] === 1,\r\n  highTempErr: parts[31] === 1,\r\n  fanErr: parts[32] === 1,\r\n  hotErr: parts[33] === 1,\r\n  motorErr: parts[34] === 1,\r\n  noPellets: parts[35] === 1,\r\n  erL: parts[36] === 1,\r\n  fanState: parts[37] === 1,\r\n  hotState: parts[38] === 1,\r\n  motorState: parts[39] === 1,\r\n  lightState: parts[40] === 1,\r\n  primeState: parts[41] === 1,\r\n  isFahrenheit: parts[42] === 1,\r\n  recipeStep: parts[43],\r\n  recipeTime: parts[44] * 3600 + parts[45] * 60 + parts[46],\r\n};\r\nswitch (parts[26]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 23);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 23);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 30) {\r\n  return null;\r\n}\r\n\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\nreturn {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  grillSetTemp: convertTemperature(parts, 23),\r\n  grillTemp: convertTemperature(parts, 26),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  isFahrenheit: parts[29] === 1,\r\n};",
      "updated_at": "2023-01-25T12:01:54.000000Z"
    },
    "control_board_id": 12,
    "created_at": "2023-02-01T16:41:44.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 90,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/V6%20Elite.png",
    "lights": 0,
    "manual_url": null,
    "max_temp": "420",
    "meat_probes": 2,
    "min_temp": "130",
    "name": "PBV6 PSE",
    "name_text_color": "#A1A1A1",
    "part_number": "PBV6 PSE",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "130/135/140/145/150/155/160/165/170/175/180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420",
    "updated_at": "2023-04-03T11:03:04.000000Z"
  },
  "PBV6PSE": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 83,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 84,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 85,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 86,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 87,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 88,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 89,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 90,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 91,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 93,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 94,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        },
        {
          "control_board_id": 11,
          "created_at": "2023-01-03T10:03:36.000000Z",
          "deleted_at": null,
          "description": "set the target temperature of probe #2",
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0503'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 116,
          "name": "Set Probe 2 Temperature",
          "slug": "set-probe-2-temperature",
          "updated_at": "2023-01-03T10:03:36.000000Z"
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 11,
      "name": "PBB",
      "platform_id": 2,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 47) {\r\n  return null;\r\n}\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\n\r\nconst status = {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  moduleIsOn: parts[27] === 1,\r\n  err1: parts[28] === 1,\r\n  err2: parts[29] === 1,\r\n  err3: parts[30] === 1,\r\n  highTempErr: parts[31] === 1,\r\n  fanErr: parts[32] === 1,\r\n  hotErr: parts[33] === 1,\r\n  motorErr: parts[34] === 1,\r\n  noPellets: parts[35] === 1,\r\n  erL: parts[36] === 1,\r\n  fanState: parts[37] === 1,\r\n  hotState: parts[38] === 1,\r\n  motorState: parts[39] === 1,\r\n  lightState: parts[40] === 1,\r\n  primeState: parts[41] === 1,\r\n  isFahrenheit: parts[42] === 1,\r\n  recipeStep: parts[43],\r\n  recipeTime: parts[44] * 3600 + parts[45] * 60 + parts[46],\r\n};\r\nswitch (parts[26]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 23);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 23);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts.length < 30) {\r\n  return null;\r\n}\r\n\r\nconst p1Target = convertTemperature(parts, 2);\r\nconst p2Target = convertTemperature(parts, 5);\r\nreturn {\r\n  p1Target: p1Target !== 000 && p1Target !== 960 ? p1Target : null,\r\n  p2Target: p2Target !== 000 && p2Target !== 960 ? p2Target : null,\r\n  p1Temp: convertTemperature(parts, 8),\r\n  p2Temp: convertTemperature(parts, 11),\r\n  p3Temp: convertTemperature(parts, 14),\r\n  p4Temp: convertTemperature(parts, 17),\r\n  grillSetTemp: convertTemperature(parts, 23),\r\n  grillTemp: convertTemperature(parts, 26),\r\n  smokerActTemp: convertTemperature(parts, 20),\r\n  isFahrenheit: parts[29] === 1,\r\n};",
      "updated_at": "2022-12-22T11:45:57.000000Z"
    },
    "control_board_id": 11,
    "created_at": "2022-11-09T23:21:31.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 77,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/V6%20Elite.png",
    "lights": 1,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Pro-Series/11007_PBV6PSE_manual_EN_FR_ES.pdf",
    "max_temp": "420",
    "meat_probes": 2,
    "min_temp": "130",
    "name": "PBV6PSE",
    "name_text_color": "#A1A1A1",
    "part_number": "PBV6PSE",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "130/135/140/145/150/155/160/165/170/175/180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420",
    "updated_at": "2023-04-03T11:02:21.000000Z"
  },
  "PBV7PW1": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 1,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 2,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 3,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 4,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let _hundreds = Math.floor(arguments[0]/100); let _tens = Math.floor((arguments[0] % 100) / 10); let _ones = Math.floor(arguments[0] % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 6,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 7,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 8,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 9,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0800FF",
          "id": 11,
          "name": "Turn Primer Motor Off",
          "slug": "turn-primer-motor-off",
          "updated_at": null
        },
        {
          "control_board_id": 5,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0801FF",
          "id": 12,
          "name": "Turn Primer Motor On",
          "slug": "turn-primer-motor-on",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 5,
      "name": "PBC",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 44) {\r\n  return null;\r\n}\r\nconst status = {\r\n  /*p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  moduleIsOn: parts[24] === 1,\r\n  err1: parts[25] === 1,\r\n  err2: parts[26] === 1,\r\n  err3: parts[27] === 1,\r\n  highTempErr: parts[28] === 1,\r\n  fanErr: parts[29] === 1,\r\n  hotErr: parts[30] === 1,\r\n  motorErr: parts[31] === 1,\r\n  noPellets: parts[32] === 1,\r\n  erL: parts[33] === 1,\r\n  fanState: parts[34] === 1,\r\n  hotState: parts[35] === 1,\r\n  motorState: parts[36] === 1,\r\n  lightState: parts[37] === 1,\r\n  primeState: parts[38] === 1,\r\n  isFahrenheit: parts[39] === 1,\r\n  recipeStep: parts[40],\r\n  recipeTime: parts[41] * 3600 + parts[42] * 60 + parts[43],\r\n};\r\nswitch (parts[23]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 20);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 20);\r\n    break;\r\n}\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  return null;\r\n}\r\nconst parts = parseHexMessage(message);\r\nif (parts < 27) {\r\n  return null;\r\n}\r\nreturn {\r\n /* p1Target: convertTemperature(parts, 2),*/\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  p4Temp: convertTemperature(parts, 14),\r\n  grillSetTemp: convertTemperature(parts, 20),\r\n  grillTemp: convertTemperature(parts, 23),\r\n  smokerActTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[26] === 1,\r\n};",
      "updated_at": "2022-12-22T10:12:07.000000Z"
    },
    "control_board_id": 5,
    "created_at": "2022-07-13T04:29:24.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 65,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PBV7PW1_Sportsman-2021-6-30-controller123.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Sportsman/10912_PBV7PW1_manual_110V_EN_FR_ES.pdf",
    "max_temp": "420",
    "meat_probes": 2,
    "min_temp": "150",
    "name": "PBV7PW1",
    "name_text_color": "#2B77BC",
    "part_number": "PBV7PW1",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "150/155/160/165/170/175/180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420",
    "updated_at": "2022-10-31T15:16:56.000000Z"
  },
  "PBX - test 1": {
    "category": "N/A",
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 14,
          "created_at": "2023-09-21T18:53:14.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 139,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": "2023-09-21T18:53:14.000000Z"
        },
        {
          "control_board_id": 14,
          "created_at": "2023-09-21T18:53:36.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 140,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": "2023-09-21T18:53:36.000000Z"
        },
        {
          "control_board_id": 14,
          "created_at": "2023-09-21T18:53:59.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0502'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 141,
          "name": "Set Probe 1 Temperature",
          "slug": "set-probe-1-temperature",
          "updated_at": "2023-09-21T18:53:59.000000Z"
        },
        {
          "control_board_id": 14,
          "created_at": "2023-09-21T18:54:21.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 142,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": "2023-09-21T18:54:21.000000Z"
        },
        {
          "control_board_id": 14,
          "created_at": "2023-09-21T18:54:38.000000Z",
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 143,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": "2023-09-21T18:54:38.000000Z"
        },
        {
          "control_board_id": 14,
          "created_at": "2023-09-21T18:55:03.000000Z",
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0503'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 144,
          "name": "Set Probe 2 Temperature",
          "slug": "set-probe-2-temperature",
          "updated_at": "2023-09-21T18:55:03.000000Z"
        }
      ],
      "created_at": "2023-09-21T18:52:45.000000Z",
      "deleted_at": null,
      "id": 14,
      "name": "PBX1",
      "platform_id": null,
      "site_id": 1,
      "status_function": null,
      "temperature_function": null,
      "updated_at": "2023-09-21T18:52:45.000000Z"
    },
    "control_board_id": 14,
    "created_at": "2023-09-21T18:56:38.000000Z",
    "deleted_at": null,
    "description": "<p>develpment</p>",
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 97,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/PB1600PS3.png",
    "lights": 0,
    "manual_url": null,
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "PBX - test 1",
    "name_text_color": "#FFFFFF",
    "part_number": "xxxx",
    "screen_orientation": "Vertical",
    "shopify_product_id": "xxxx",
    "site_id": 1,
    "sku": "xxxx",
    "temp_increment": "180/190/200/210/220/230/240/250/260/270/280/290/300/325/350/375/400/450/500",
    "updated_at": "2023-09-21T18:56:38.000000Z"
  },
  "Savannah Wi-Fi Upgrade": {
    "category": null,
    "control_board": {
      "control_board_commands": [
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0B01FF",
          "id": 37,
          "name": "Get Grill Status",
          "slug": "get-status",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0C01FF",
          "id": 38,
          "name": "Get Grill/Probes Temperatures",
          "slug": "get-temperatures",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": "let temp = arguments[1] === false ? Math.round(((arguments[0] * 1.8)+ 32)/5) * 5 : arguments[0]; let _hundreds = Math.floor(temp/100); let _tens = Math.floor((temp % 100) / 10); let _ones = Math.floor(temp % 10); return 'FE0501'+formatHex(_hundreds)+formatHex(_tens)+formatHex(_ones) + 'FF';",
          "hexadecimal": null,
          "id": 40,
          "name": "Set Grill Temperature",
          "slug": "set-temperature",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0200FF",
          "id": 41,
          "name": "Turn Light Off",
          "slug": "turn-light-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0201FF",
          "id": 42,
          "name": "Turn Light On",
          "slug": "turn-light-on",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0102FF",
          "id": 43,
          "name": "Turn Grill Off",
          "slug": "turn-off",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0902FF",
          "id": 45,
          "name": "Set Temperature to Celsius",
          "slug": "set-celsius",
          "updated_at": null
        },
        {
          "control_board_id": 6,
          "created_at": null,
          "deleted_at": null,
          "description": null,
          "function": null,
          "hexadecimal": "FE0901FF",
          "id": 46,
          "name": "Set Temperature to Fahrenheit",
          "slug": "set-fahrenheit",
          "updated_at": null
        }
      ],
      "created_at": "2022-06-27T00:00:00.000000Z",
      "deleted_at": null,
      "id": 6,
      "name": "PBM",
      "platform_id": 1,
      "site_id": 1,
      "status_function": "if (!message.startsWith(\"FE0B\")) {\r\n  //not a grill status messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 36) {\r\n  return null;\r\n}\r\nconst status = {\r\n // p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  moduleIsOn: parts[18] === 1,\r\n  err1: parts[19] === 1,\r\n  err2: parts[20] === 1,\r\n  err3: parts[21] === 1,\r\n  highTempErr: parts[22] === 1,\r\n  fanErr: parts[23] === 1,\r\n  hotErr: parts[24] === 1,\r\n  motorErr: parts[25] === 1,\r\n  noPellets: parts[26] === 1,\r\n  fanState: parts[27] === 1,\r\n  hotState: parts[28] === 1,\r\n  motorState: parts[29] === 1,\r\n  lightState: parts[30] === 1,\r\n  isFahrenheit: parts[31] === 1,\r\n  recipeStep: parts[32],\r\n  recipeTime: parts[33] * 3600 + parts[34] * 60 + parts[35],\r\n};\r\nswitch (parts[17]) {\r\n  case 1:\r\n    status.grillSetTemp = convertTemperature(parts, 14);\r\n    break;\r\n  case 2:\r\n    status.grillTemp = convertTemperature(parts, 14);\r\n    break;\r\n}\r\n\r\nif (!status.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  status.p1Temp = ftoc(status.p1Temp);\r\n  status.p2Temp = ftoc(status.p2Temp);\r\n  status.p3Temp = ftoc(status.p3Temp);\r\n  status.grillSetTemp = ftoc(status.grillSetTemp);\r\n  status.grillTemp = ftoc(status.grillTemp);\r\n}\r\n\r\nreturn status;",
      "temperature_function": "if (!message.startsWith(\"FE0C\")) {\r\n  //not a grill temperature messasge\r\n  return null;\r\n}\r\n\r\nconst parts = parseHexMessage(message);\r\nif (parts < 21) {\r\n  return null;\r\n}\r\n\r\nconst temps = {\r\n  //  p1Target: convertTemperature(parts, 2),\r\n  p1Temp: convertTemperature(parts, 5),\r\n  p2Temp: convertTemperature(parts, 8),\r\n  p3Temp: convertTemperature(parts, 11),\r\n  grillSetTemp: convertTemperature(parts, 14),\r\n  grillTemp: convertTemperature(parts, 17),\r\n  isFahrenheit: parts[20] === 1,\r\n};\r\n\r\nif (!temps.isFahrenheit) {\r\n  const ftoc = function (temp) {\r\n    if ((typeof temp === \"undefined\") || (temp === 960)) {\r\n      return temp;\r\n    }\r\n    return Math.floor((temp - 32) / 1.8);\r\n  };\r\n  temps.p1Temp = ftoc(temps.p1Temp);\r\n  temps.p2Temp = ftoc(temps.p2Temp);\r\n  temps.p3Temp = ftoc(temps.p3Temp);\r\n  temps.grillSetTemp = ftoc(temps.grillSetTemp);\r\n  temps.grillTemp = ftoc(temps.grillTemp);\r\n}\r\n\r\nreturn temps;",
      "updated_at": "2022-11-04T07:23:53.000000Z"
    },
    "control_board_id": 6,
    "created_at": "2023-06-13T15:00:25.000000Z",
    "deleted_at": null,
    "description": null,
    "has_fc_functionality": 1,
    "has_indicators": 0,
    "has_mpc": 0,
    "has_recipe_functionality": 0,
    "id": 94,
    "image": null,
    "image_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-images/ghost%20grill.png",
    "lights": 0,
    "manual_url": "https://dansons-mobile.s3.us-east-1.amazonaws.com/grill-manuals/Onyx/10989_PB1500NX_owners_manual.pdf",
    "max_temp": "500",
    "meat_probes": 2,
    "min_temp": "180",
    "name": "Savannah Wi-Fi Upgrade",
    "name_text_color": "#A1A1A1",
    "part_number": "Savannah Wi-Fi Upgrade",
    "screen_orientation": "Horizontal",
    "shopify_product_id": null,
    "site_id": 1,
    "sku": null,
    "temp_increment": "180/185/190/195/200/205/210/215/220/225/230/235/240/245/250/255/260/265/270/275/280/285/290/295/300/305/310/315/320/325/330/335/340/345/350/355/360/365/370/375/380/385/390/395/400/405/410/415/420/425/430/435/440/445/450/455/460/465/470/475/480/485/490/495/500",
    "updated_at": "2023-06-14T08:25:58.000000Z"
  }
}
